use crate::serde_datetime;
use chrono::NaiveDateTime;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, Serialize, Deserialize)]
pub struct Organization {
    pub id: u64,
    pub name: String,
    #[serde(with = "serde_datetime")]
    pub created_at: NaiveDateTime,
    #[serde(with = "serde_datetime")]
    pub updated_at: NaiveDateTime,
    pub profilepic: i64,
    pub profilepicupdated: String,
    pub tasks_enabled: bool,
    pub uuid: String,
    pub shortname: String,
    pub announcements_enabled: bool,
    pub grant_create_announcement: bool,
    pub grant_create_group: bool,
    pub grant_add_user: bool,
    pub grant_search_org: bool,
    pub grant_create_dm: bool,
    pub create_announcement: String,
    pub create_group: String,
    pub add_user: String,
    pub search_org: String,
    pub create_dm: String,
    pub integrations_enabled: bool,
    pub grant_delete_any_announcement: bool,
    pub delete_any_announcement: String,
    pub meetings_enabled: bool,
    pub audio_messages_enabled: bool,
    pub maxstreams: i64,
    pub imports_enabled: bool,
    pub search_enabled: bool,
    pub create_api_tokens: String,
    pub bubble_membership_cap: i64,
    pub badgecount_writing_enabled: i64,
    pub badgecount_reading_enabled: i64,
    pub experimental_notifications_enabled: i64,
    pub supergroups_enabled: bool,
    pub meetings_captions_enabled: bool,
    pub giphy_rating: String,
    pub user_title_enabled: bool,
    pub user_pronouns_enabled: bool,
    pub profilepicurl: String,
    pub profilepicpath: String,
    pub create_group_announcement: String,
    pub grant_create_group_announcement: bool,
}
